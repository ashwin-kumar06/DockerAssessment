# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.


version: '3.4'


#create a volume for the my sql container.To ensure Data persists after my sql container is stopped
volumes:
  datafiles:
 
services:
  #DataBase Service
  database:
    #Pull the latest mysql image
    image: mysql:8.0.22
    #Map port 3306 on the mysql container to port 3306 in the host
    ports:
      - "3333:3307"
    expose:
      - "3333"
    #Specify where the persisted Data should be stored
    volumes:
      - datafiles:/var/lib/mysql
      - "~/sql-scripts/setup.sql:/docker-entrypoint-initdb.d/1.sql"
    restart: always
    #Specify Environment Variables for mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: patientmanagement
  #Api  Service
 
  create:
    build:
      context: ./createapi
      #Use the DockerFile in that Directory
      dockerfile: Dockerfile
    #This Service Depends on the database service specifed above
    depends_on:
      - database
    #Map port 8888 in the docker container to port 80 in the Api
    ports:
      - "5000:80"
    restart: always
    #Specify Environment Variables for the Api Service
    environment:
      - DBHOST=database
      - ASPNETCORE_ENVIRONMENT=Development
  read:
    build:
      context: ./readapi
       #Api  Service
        #Use the DockerFile in that Directory
      dockerfile: Dockerfile
    #This Service Depends on the database service specifed above
    depends_on:
      - database
    #Map port 8888 in the docker container to port 80 in the Api
    ports:
      - "5001:80"
    restart: always
    #Specify Environment Variables for the Api Service
    environment:
      - DBHOST=database
      - ASPNETCORE_ENVIRONMENT=Development
  
  update:
    build:
      context: ./updateapi
      #Use the DockerFile in that Directory
      dockerfile: Dockerfile
    #This Service Depends on the database service specifed above
    depends_on:
      - database
    #Map port 8888 in the docker container to port 80 in the Api
    ports:
      - "5002:80"
    restart: always
    #Specify Environment Variables for the Api Service
    environment:
      - DBHOST=database
      - ASPNETCORE_ENVIRONMENT=Development

  delete:
    build:
      context: ./deleteapi
      #Use the DockerFile in that Directory
      dockerfile: Dockerfile
    #This Service Depends on the database service specifed above
    depends_on:
      - database
    #Map port 8888 in the docker container to port 80 in the Api
    ports:
      - "5003:80"
    restart: always
    #Specify Environment Variables for the Api Service
    environment:
      - DBHOST=database
      - ASPNETCORE_ENVIRONMENT=Development